// -- date_dimension
let
    StartDate = #date(StartYear,1,1),
    EndDate = #date(EndYear,12,31),
    NumberOfDays = Duration.Days(EndDate - StartDate),
    Dates = List.Dates(StartDate, NumberOfDays + 1, #duration(1,0,0,0)),
    #"Converted to Table" = Table.FromList(Dates, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    #"Renamed Columns" = Table.RenameColumns(#"Converted to Table",{{"Column1", "FullDateAlternateKey"}}),
    #"Inserted Year" = Table.AddColumn(#"Renamed Columns", "Year", each Date.Year([FullDateAlternateKey]), Int64.Type),
    #"Inserted Month" = Table.AddColumn(#"Inserted Year", "Month", each Date.Month([FullDateAlternateKey]), Int64.Type),
    #"Inserted Month Name" = Table.AddColumn(#"Inserted Month", "Month Name", each Date.MonthName([FullDateAlternateKey]), type text),
    #"Inserted Quarter" = Table.AddColumn(#"Inserted Month Name", "Quarter", each Date.QuarterOfYear([FullDateAlternateKey]), Int64.Type),
    #"Inserted Week of Year" = Table.AddColumn(#"Inserted Quarter", "Week of Year", each Date.WeekOfYear([FullDateAlternateKey]), Int64.Type),
    #"Inserted Week of Month" = Table.AddColumn(#"Inserted Week of Year", "Week of Month", each Date.WeekOfMonth([FullDateAlternateKey]), Int64.Type),
    #"Inserted Day" = Table.AddColumn(#"Inserted Week of Month", "Day", each Date.Day([FullDateAlternateKey]), Int64.Type),
    #"Inserted Day of Week" = Table.AddColumn(#"Inserted Day", "Day of Week", each Date.DayOfWeek([FullDateAlternateKey]), Int64.Type),
    #"Inserted Day of Year" = Table.AddColumn(#"Inserted Day of Week", "Day of Year", each Date.DayOfYear([FullDateAlternateKey]), Int64.Type),
    #"Inserted Day Name" = Table.AddColumn(#"Inserted Day of Year", "Day Name", each Date.DayOfWeekName([FullDateAlternateKey]), type text),
    #"Added Custom" = Table.AddColumn(#"Inserted Day Name", "Fiscal year", each if [Month] >= StartOfFiscalYear
then [Year] + 1
else [Year]),
    #"Added Custom1" = Table.AddColumn(#"Added Custom", "Fiscal Period", each if [Month] >= StartOfFiscalYear
then [Month] - (StartOfFiscalYear - 1)
else [Month] + (12 - StartOfFiscalYear + 1)),
    #"Inserted Division" = Table.AddColumn(#"Added Custom1", "Division", each [Fiscal Period] / 3, type number),
    #"Rounded Up" = Table.TransformColumns(#"Inserted Division",{{"Division", Number.RoundUp, Int64.Type}}),
    #"Renamed Columns1" = Table.RenameColumns(#"Rounded Up",{{"Division", "Fiscal Quarter"}}),
    #"Merged Queries" = Table.NestedJoin(#"Renamed Columns1",{"FullDateAlternateKey"},SpanishHolidays,{"date"},"SpanishHolidays",JoinKind.LeftOuter),
    #"Expanded SpanishHolidays" = Table.ExpandTableColumn(#"Merged Queries", "SpanishHolidays", {"name"}, {"SpanishHolidays.name"}),
    #"Renamed Columns2" = Table.RenameColumns(#"Expanded SpanishHolidays",{{"SpanishHolidays.name", "Public Holiday"}}),
    #"Added Custom2" = Table.AddColumn(#"Renamed Columns2", "Is Public Holiday", each if [Public Holiday] = null then false else true)
in
    #"Added Custom2"